apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: hcl-domino
    server: {{ .Values.domino.server.name }}
    role: primary
    {{- include "common.labels" . | nindent 4 }}

spec:
  replicas: 1
  selector:
    matchLabels:
      app: hcl-domino       # has to match .spec.template.metadata.labels
      server: {{ .Values.domino.server.name }}
  serviceName: {{ .Release.Name }}-domino   # has to match .metadata.name in Headless Service definition
  template:
    metadata:
      labels:
        app: hcl-domino     # has to match .spec.selector.matchLabels
        server: {{ .Values.domino.server.name }}
    spec:
      imagePullSecrets:
        - name: regcred
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"

      containers:
        - name: domino
          image: "{{ .Values.image.imageCredentials.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"

          env:
            - name: LANG
              value: "en_US.UTF-8"
            - name: DOMINO_DOCKER_STDOUT
              value: {{ .Values.logs.dominoStdOut | quote }}
            - name: SetupAutoConfigure
              value: "1"
            - name: SetupAutoConfigureParams
              value: "/etc/domino-cfg/auto_config.json"
            - name: DominoConfigRestartWaitTime 
              value: "30"
            - name: DominoConfigRestartWaitString 
              value: "Server started on physical node"

          securityContext:
            capabilities:
              add: ["SYS_PTRACE"]
            runAsNonRoot: true
            runAsUser: 1000

          volumeMounts:
            - name: dominodata
              mountPath: /local
            - name: autoconfig
              mountPath: /etc/domino-cfg
            - name: notes-ids
              mountPath: {{ .Values.install.idsMountedDir }}

          lifecycle:
            postStart:
              exec:
                command:
                  - 'sh'
                  - '-c'
                  - >
                    if [ "$(ls -A {{ .Values.install.idsMountedDir }}/..data)" ] ; then
                      cp {{ .Values.install.idsMountedDir }}/* {{ .Values.install.idsDir }}
                    fi;

          ports:
                - containerPort: 1352
                  protocol: TCP
                - containerPort: 80
                  protocol: TCP
                - containerPort: 443
                  protocol: TCP

          livenessProbe:
            exec:
              command:
                - /domino_docker_healthcheck.sh
            initialDelaySeconds: 60
            periodSeconds: 20

          readinessProbe:
            exec:
              command:
                - /domino_docker_healthcheck.sh
                - ready
            initialDelaySeconds: 60
            periodSeconds: 20

          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "4Gi"
              cpu: "2000m"

      # this init container is a work-around to change file-system permissions for some local stoarge providers
      initContainers:
        - name: domino-startup
          image: busybox:latest

          command: [ 'sh', '-c', 'chmod 777 /local' ]

          securityContext:
            privileged: true
            runAsNonRoot: false
            runAsUser: 0

          volumeMounts:
            - name: dominodata
              mountPath: /local

      volumes:
        - name: autoconfig
          configMap:
            name: {{ .Release.Name }}-autoconfig

        - name: notes-ids
          secret:
            secretName: {{ .Release.Name }}-ids

  volumeClaimTemplates:
    - metadata:
        name: dominodata
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}